@startuml
title CA1-mapped IaC -> IaaS (4-VM Stack)

skinparam shadowing false
skinparam componentStyle rectangle
skinparam defaultTextAlignment left
skinparam nodesep 70
skinparam ranksep 90

' ===================== IaC (collapsed choice) =====================
package "IaC (Collapsed Choice)" as IAC {
  component IACORE as "IaC: Terraform + Ansible [Packer optional]"
  component VALID  as "Validation: smoke_test.sh"
  component DOCS   as "Docs & Outputs (README, logs, summary)"
}
note bottom of IACORE
CA1-1: choose tooling (TF+Ansible)
CA1-2: idempotent infra + roles
CA1-3: vars (region, sizes, AMI, topics, creds)
CA1-4: integrates Secrets Manager (no plaintext)
CA1-5: deploy/destroy cmds (make/just)
Provisioning: VPC, SGs, VMs, packages/services
end note
note bottom of VALID
CA1-6: produce sample -> Kafka
consume -> Processor
persist -> Mongo; capture logs
end note
note bottom of DOCS
CA1-7: README (prereqs, deploy, destroy, tests)
Outputs: IPs, topics, URIs, results
Attach run logs/screens
end note

' ===================== IaaS (AWS) =====================
package "IaaS (AWS)" as IAAS {

  package "Networking" as NET {
    node VPC as "VPC / Subnet / Routes / SGs"
  }
  note bottom of NET
CA1-2: declare network + firewall rules
CA1-3: region/CIDR via variables
Provisioning: single subnet on 10.0.1.0/24
end note

  package "Identity & Secrets" as SEC {
    component IAM as "IAM roles / instance profiles"
    component SSM as "Secrets Manager or SSM Param Store (+KMS)"
  }
  note bottom of SEC
CA1-4: store creds in vault; encrypt with KMS
No secrets checked into repo
Provisioning: roles, policies, secret keys
end note

  package "Compute (4 VMs)" as CMP {
    node VM1 as "VM1 kafka-zk
Kafka 9092; ZK 2181 local"
    node VM2 as "VM2 mongodb
27017; gpu_metrics, token_usage"
    node VM3 as "VM3 processor
Docker FastAPI 8080"
    node VM4 as "VM4 producers
Docker 1-2 producers"
  }
  note bottom of CMP
CA1-2: VMs and services defined in code
CA1-3: instance types/count/AMI are variables
CA1-5: destroy removes all instances
Provisioning: user-data + Ansible roles install services
end note

}

' ===================== IaC -> IaaS provisioning =====================
IACORE --> VPC : provision VPC/Subnet/SGs
IACORE --> IAM : create roles/policies
IACORE --> SSM : create secrets/params
IACORE --> VM1 : create + configure
IACORE --> VM2 : create + configure
IACORE --> VM3 : create + configure
IACORE --> VM4 : create + configure
DOCS   <- IACORE : outputs (IPs, topics, URIs)

' ===================== Service wiring (CA0 topology) =====================
VM4 --> VM1 : produce tokens (9092)
VM3 --> VM1 : consume tokens (9092)
VM3 --> VM2 : write docs (27017)

' Optional admin access for health
actor Admin
Admin --> VM3 : HTTP 8080 (health)
Admin --> VM1 : SSH 22 key-only
Admin --> VM2 : SSH 22 key-only
Admin --> VM4 : SSH 22 key-only

' ===================== Validation & Deliverables =====================
VALID --> VM1 : send sample event
VALID --> VM2 : verify writes
VALID --> DOCS : write results/logs
DOCS  <- VALID : attach screenshots/logs

' ===================== Notes: SG policy highlights =====================
note bottom
Security groups (provisioned by IaC):
- Kafka 9092: allow from producers (VM4) and processor (VM3) only
- MongoDB 27017: allow from processor (VM3) only
- Processor 8080: allow from Admin IP only (optional)
- SSH 22: key-only from Admin IP
end note

@enduml
